<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Plalyy</title>
  <icon>https://www.gravatar.com/avatar/727063e33fd1a1120f157a9d4f8c65fc</icon>
  <subtitle>选择热爱 热爱选择</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-11T09:54:57.975Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Plalyy</name>
    <email>plalyy199@sina.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>树形DP-树上点最远距离</title>
    <link href="http://yoursite.com/2020/07/11/%E6%A0%91%E5%BD%A2DP-%E6%A0%91%E4%B8%8A%E7%82%B9%E6%9C%80%E8%BF%9C%E8%B7%9D%E7%A6%BB/"/>
    <id>http://yoursite.com/2020/07/11/%E6%A0%91%E5%BD%A2DP-%E6%A0%91%E4%B8%8A%E7%82%B9%E6%9C%80%E8%BF%9C%E8%B7%9D%E7%A6%BB/</id>
    <published>2020-07-11T09:11:18.000Z</published>
    <updated>2020-07-11T09:54:57.975Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;仍然在往门里钻 , 写题解是希望重新审视一下细节，可能有亿点点乱。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;POJ-2196-Computer&quot;&gt;&lt;a href=&quot;#POJ-2196-Computer&quot; class=&quot;headerlink&quot; title=&quot;POJ 2196 Computer&quot;&gt;&lt;/a&gt;POJ 2196 Computer&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;题意：一棵树，对于每个结点求出其他点与它最远的距离。&lt;/p&gt;
&lt;p&gt;之前做最远距离时，利用的是树的直径，这次看到该题，发现树形DP也不失为一个好办法，所以想了树形DP的解法。某点的最长距离，很容易想到是到其子树最长距离+该点为根时另外子树最远距离。&lt;/p&gt;
&lt;p&gt;所以设 $dp[i][j],1\leq i\leq n,j=0,1$ , j 的值表示上述两种子树的状态。&lt;/p&gt;
&lt;p&gt;原子树深度由常规的dfs就可以求出，借下来考虑如何求另外部分。所指的另外部分，如下图，也就是该节点父结点及其另外部分，因而，该点的 $dp[2][1]$可以由父结点更新。&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://yoursite.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>树形DP入门题</title>
    <link href="http://yoursite.com/2020/07/11/%E6%A0%91%E5%BD%A2DP%E5%85%A5%E9%97%A8%E9%A2%98/"/>
    <id>http://yoursite.com/2020/07/11/%E6%A0%91%E5%BD%A2DP%E5%85%A5%E9%97%A8%E9%A2%98/</id>
    <published>2020-07-11T02:13:00.000Z</published>
    <updated>2020-07-11T06:51:33.333Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前遇到的树形DP，做的都不清楚，重新入下门，希望成功。&lt;/p&gt;
&lt;p&gt;挑几道例题入门，太过类似的就算了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;POJ-2342-没有上司的舞会&quot;&gt;&lt;a href=&quot;#POJ-2342-没有上司的舞会&quot; class=&quot;headerlink&quot; title=&quot;POJ 2342 没有上司的舞会&quot;&gt;&lt;/a&gt;POJ 2342 没有上司的舞会&lt;/h4&gt;&lt;p&gt;题意：公司成员参加舞会，每人都有一个快乐值，成员和直属上司不能同时参加，问如何使得快乐值最大。&lt;/p&gt;
&lt;p&gt;显然$dp[i][j]$表示成员 $i$子树(参加与否)达到的最大值。&lt;/p&gt;
&lt;p&gt;$dp[i][0]=\sum max(dp[j][1],dp[j][0])$, j 为子成员&lt;/p&gt;
&lt;p&gt;$dp[i][1]=\sum dp[j][0]$, j 为子成员&lt;/p&gt;
&lt;p&gt;从根节点开始。&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://yoursite.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>异或前缀和</title>
    <link href="http://yoursite.com/2020/07/11/%E5%BC%82%E6%88%96%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    <id>http://yoursite.com/2020/07/11/%E5%BC%82%E6%88%96%E5%89%8D%E7%BC%80%E5%92%8C/</id>
    <published>2020-07-11T01:19:10.000Z</published>
    <updated>2020-07-11T09:46:45.176Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之后更新部分异或/前缀和的题目。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;小AA的数列&quot;&gt;&lt;a href=&quot;#小AA的数列&quot; class=&quot;headerlink&quot; title=&quot;小AA的数列&quot;&gt;&lt;/a&gt;小AA的数列&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;题意：求数列所有长度为偶数且在$[L,R]$之间的区间异或和之和&lt;/p&gt;
&lt;p&gt;显然是异或前缀，按位算贡献，问题是如何处理偶数长度和区间限制。然后开始找规律，首先$sum[R-L]=sum[R]\bigoplus sum[L-1]$，针对二进制每位，当前位值为1时，要找此前位为0的数，为0时同理，这样才能产生贡献。所以针对位值，有一个取反的规律，而针对下标，同奇同偶。所以考虑针对每一个右端点，记录此前产生的贡献，并更新贡献。&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://yoursite.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="前缀和" scheme="http://yoursite.com/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>删数求前缀-奇怪的名字</title>
    <link href="http://yoursite.com/2020/07/09/%E5%88%A0%E6%95%B0%E6%B1%82%E5%89%8D%E7%BC%80-%E5%A5%87%E6%80%AA%E7%9A%84%E5%90%8D%E5%AD%97/"/>
    <id>http://yoursite.com/2020/07/09/%E5%88%A0%E6%95%B0%E6%B1%82%E5%89%8D%E7%BC%80-%E5%A5%87%E6%80%AA%E7%9A%84%E5%90%8D%E5%AD%97/</id>
    <published>2020-07-08T16:25:23.000Z</published>
    <updated>2020-07-11T09:46:21.038Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://vjudge.net/contest/381578#problem/G&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HDU2019多校第三场 G - Find the answer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题意：给定长为n的序列以及整数m，对于位置 i ，可以令 k (k &amp;lt; i)位置的数变为0，使得这段前缀和小于等于m，求每个位置的最小改变数。&lt;/p&gt;
&lt;p&gt;分析：求最小改变数，也就是尽可能多使用原数，搞一个multiset和一个sum，处理一下进出元素。multiset存可以使用的元素，sum为堆中元素贡献。假如sum+a[i]&amp;lt;=m，插入元素，否则从堆里开始假删除（后面每次是独立的，不能影响后续），当满足合法后若a[i]&amp;lt;max，那么将两个元素互换，很显然次数不变的情况下sum越小越好。同理，用线段树维护子集也可以。&lt;/p&gt;
&lt;p&gt;必须要有n个空格+换行！不然PE&lt;/p&gt;
&lt;p&gt;CF #568 Div.2小数据题  &lt;a href=&quot;https://codeforces.com/contest/1185/problem/C2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C2. Exam in BerSU (hard version)&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://yoursite.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>XIU-微信小程序</title>
    <link href="http://yoursite.com/2020/06/15/XIU-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2020/06/15/XIU-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</id>
    <published>2020-06-15T14:27:42.000Z</published>
    <updated>2020-06-30T12:29:57.003Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;微信小程序比赛提交过作品了，这里简单回顾一下。&quot;&gt;&lt;a href=&quot;#微信小程序比赛提交过作品了，这里简单回顾一下。&quot; class=&quot;headerlink&quot; title=&quot;微信小程序比赛提交过作品了，这里简单回顾一下。&quot;&gt;&lt;/a&gt;微信小程序比赛提交过作品了，这里简单回顾一下。&lt;/h3&gt;&lt;p&gt;XIU 修小善  校园维修助手&lt;/p&gt;
&lt;p&gt;核心基本是订单的增删改查，地址管理，还加了点别的功能&lt;/p&gt;
&lt;p&gt;感谢三位队友&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;之前看到微信小程序大赛的广告，想着给mm做一个挺不错，那要不先搞一下这个积累点经验？ &lt;/p&gt;
&lt;p&gt;我转发给了外校的高ZK，他又拉了两个学长Y和C，组成了队伍。这个组队的效率真的蛮高的，然后当天的晚上，我们就基本确定了方向以及分工，做一个校内电子产品维修类的小程序，灵感来自于Y学长在校期间曾在电子社团张罗过类似的事。我和C学长负责一下交互还有数据库相关的，高负责页面，Y学长统筹。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂" scheme="http://yoursite.com/categories/%E6%9D%82/"/>
    
    
  </entry>
  
  <entry>
    <title>序列自动机</title>
    <link href="http://yoursite.com/2020/06/12/%E5%BA%8F%E5%88%97%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    <id>http://yoursite.com/2020/06/12/%E5%BA%8F%E5%88%97%E8%87%AA%E5%8A%A8%E6%9C%BA/</id>
    <published>2020-06-12T12:01:03.000Z</published>
    <updated>2020-07-08T15:59:41.409Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;补题，学一下序列自动机，看了 &lt;a href=&quot;https://blog.csdn.net/weixin_30568715/article/details/96500133?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;序列自动机总结与例题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;说白了就是一个二维数组 $nxt[i][j]$ ，对于字符集 $a$, $|s|=n$ , $nxt[i][j]$表示$i$ 以后第一个字符 $j$ 的位置，0为根节点，建图即 $DAG$ 。&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = n ; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ; i ++ )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ; j &amp;lt;= a ; j ++ )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nxt[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;][j] = nxt[i][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nxt[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;][s[i]] = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以想到的用处：&lt;/p&gt;
&lt;p&gt;​        1.判断是否是原字符串的子序列&lt;/p&gt;
&lt;p&gt;​        2.求子序列个数&lt;/p&gt;
&lt;p&gt;​        3.求两串的公共子序列个数&lt;/p&gt;
&lt;p&gt;​        4.求串的回文子序列个数&lt;/p&gt;
&lt;p&gt;​        5.求一个$A,B$的最长公共子序列$S$，使得$C$是的子序列&lt;/p&gt;
&lt;p&gt;//代码还没搬上来&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://yoursite.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="字符串" scheme="http://yoursite.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>随便说说</title>
    <link href="http://yoursite.com/2020/05/27/%E9%9A%8F%E4%BE%BF%E8%AF%B4%E8%AF%B4/"/>
    <id>http://yoursite.com/2020/05/27/%E9%9A%8F%E4%BE%BF%E8%AF%B4%E8%AF%B4/</id>
    <published>2020-05-27T11:28:47.000Z</published>
    <updated>2020-05-31T05:26:21.821Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;UPD 5-31: 昨晚梦到在禁区前，用很难想到的熟练度勾回了球并借势踢了一脚，但还是绵软无力。其实可以跟上再补射的，但梦里我静止看着球的轨迹，它好歹是进了。球踢出去，其实还是自己的，有跟上的可能，你总是要跟的。前几天说的以下，部分是短暂的想法，这不，几天时间就又改了。好好努力，好好前进，还有又想回绿茵了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;最近有点崩，好像是全方面的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;春季学期，念着冬季的复习，吐槽着当前的课程，就这样一直拖到了现在。大概想想，就知道自己确确实实浪费了好多时间，做了很多无营养的事，计组一点都不会，离散数据结构靠灵感，概率论靠那么一点底子，英语没达到之前的初衷，炒股课也是水了过去，日本文学名篇也没沉下心看过几本书。&lt;/p&gt;
&lt;p&gt;随便说点想法吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>H.pair数位DP</title>
    <link href="http://yoursite.com/2020/05/22/H-pair%E6%95%B0%E4%BD%8DDP/"/>
    <id>http://yoursite.com/2020/05/22/H-pair%E6%95%B0%E4%BD%8DDP/</id>
    <published>2020-05-22T09:36:18.000Z</published>
    <updated>2020-06-12T09:27:43.015Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;H-pair-数位DP&quot;&gt;&lt;a href=&quot;#H-pair-数位DP&quot; class=&quot;headerlink&quot; title=&quot;H.pair 数位DP&quot;&gt;&lt;/a&gt;H.pair 数位DP&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;题意：给定三个整数A,B,C，求数对个数$(1\leq x\leq A,1\leq y\leq B)$,至少满足以下一个条件：&lt;/p&gt;
&lt;p&gt;$(x $ $and$ $y)&amp;gt;C$&lt;/p&gt;
&lt;p&gt;$(x $ $xor$ $y)&amp;lt;C$&lt;/p&gt;
&lt;p&gt;想了好久，转成二进制按位计数，会不会是数位DP，跟杰哥锋哥哥说了下，应该是，然后就去百度学习数位DP了，拉出来不要62的AC代码开始魔改。三维变五维又变七维，最后在锋哥哥的帮助下终于过了。&lt;/p&gt;
&lt;p&gt;从高位到低位数位DP，其考虑的范围是$(0\leq x\leq A,0\leq y\leq B)$，跟题目要求不同，要注意这里产生的非法情况，大概两种做法吧：&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://yoursite.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>最近题目</title>
    <link href="http://yoursite.com/2020/05/21/%E6%9C%80%E8%BF%91%E9%A2%98%E7%9B%AE/"/>
    <id>http://yoursite.com/2020/05/21/%E6%9C%80%E8%BF%91%E9%A2%98%E7%9B%AE/</id>
    <published>2020-05-21T07:43:00.000Z</published>
    <updated>2020-05-22T09:58:19.114Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0-最近&quot;&gt;&lt;a href=&quot;#0-最近&quot; class=&quot;headerlink&quot; title=&quot;0.最近&quot;&gt;&lt;/a&gt;0.最近&lt;/h3&gt;&lt;p&gt;前几天比赛挺多的，也挺自闭，补题有点慢了，尤其那个线段树专场搞的我有点崩溃，让自己怀疑是不是这块的料，还是好好调整下心态吧。&lt;/p&gt;
&lt;h3 id=&quot;1-焦作站B题&quot;&gt;&lt;a href=&quot;#1-焦作站B题&quot; class=&quot;headerlink&quot; title=&quot;1.焦作站B题&quot;&gt;&lt;/a&gt;1.焦作站B题&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://codeforces.com/gym/102028/problem/B&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B. Ultraman vs. Aodzilla and Bodzilla&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;题意：作为勇士的锋gg要跟怪兽A、B进行回合式战斗，锋gg每次只能攻击一只怪兽但被两只怪兽攻击，锋gg第 $i$ 回合的伤害为 $i $，请给出最优的攻击序列，要求使锋gg受到最小的伤害且同样伤害的情况下序列的字典序最小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;比赛的时候李哥还是锋gg读了一下题，然后我们就没来得及做了。&lt;/del&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回合式战斗要想受到最小的伤害，一是优先解决部分怪兽，二是尽可能快速解决战斗。所以分为优先解决A还是B两种情况，然后保证回合数最小。先预处理下伤害值 sum[ ] ，因为每天的伤害值是公差为1的等差数列，所以根据lower_bound( HA+HB )确定回合数一定是最优的回合数，不受伤害溢出之类情况的影响，然后具体分析。&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://yoursite.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>第一天</title>
    <link href="http://yoursite.com/2020/05/16/%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <id>http://yoursite.com/2020/05/16/%E7%AC%AC%E4%B8%80%E5%A4%A9/</id>
    <published>2020-05-16T10:14:18.000Z</published>
    <updated>2020-05-16T10:19:28.767Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot;
        
      
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello</title>
    <link href="http://yoursite.com/2020/05/13/Hello/"/>
    <id>http://yoursite.com/2020/05/13/Hello/</id>
    <published>2020-05-13T08:52:36.000Z</published>
    <updated>2020-05-16T10:21:26.951Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot;
        
      
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
</feed>
