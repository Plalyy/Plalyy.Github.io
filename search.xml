<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一天</title>
    <url>/2020/05/16/%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>换来换去发现还是比较喜欢这个风格，之后可以自己写一个就更好了。</p>
<p>还发现了一只可以存在博客里的小狗，想起来高中的自己对于计算机的一大向往就是能自己写一个桌面人物 “C.C.”，这个一定要努力实现啊。</p>
<p>博客以后就主要放整理的题解，各方面的踩坑，还有很多自言自语的话，也许还会有书单？</p>
<p>忘了在哪看到的，少看与自己无关的，少发与别人无关的，这里是自己的地方，就更自由了吧。</p>
<p>下周就是考试，几个科目好像都不怎么样，就先不做这些了，欠的东西还有很多，记着补。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>Hello</title>
    <url>/2020/05/13/Hello/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>为什么开一个这样的东西？</p>
<p>很多次想百度解决问题，结果大多都是复制来复制去，甚至复制的会是错的，想整理自己的问题以及解决方式，希望有点用吧。</p>
<p>另一方面，想记下来一点东西吧，这样更有意思点？</p>
<p>还有别的因素，想不到了。</p>
<hr>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>最近题目</title>
    <url>/2020/05/21/%E6%9C%80%E8%BF%91%E9%A2%98%E7%9B%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="0-最近"><a href="#0-最近" class="headerlink" title="0.最近"></a>0.最近</h3><p>前几天比赛挺多的，也挺自闭，补题有点慢了，尤其那个线段树专场搞的我有点崩溃，让自己怀疑是不是这块的料，还是好好调整下心态吧。</p>
<h3 id="1-焦作站B题"><a href="#1-焦作站B题" class="headerlink" title="1.焦作站B题"></a>1.焦作站B题</h3><p><a href="https://codeforces.com/gym/102028/problem/B" target="_blank" rel="noopener">B. Ultraman vs. Aodzilla and Bodzilla</a></p>
<ul>
<li><p>题意：作为勇士的锋gg要跟怪兽A、B进行回合式战斗，锋gg每次只能攻击一只怪兽但被两只怪兽攻击，锋gg第 $i$ 回合的伤害为 $i $，请给出最优的攻击序列，要求使锋gg受到最小的伤害且同样伤害的情况下序列的字典序最小。</p>
</li>
<li><p><del>比赛的时候李哥还是锋gg读了一下题，然后我们就没来得及做了。</del></p>
</li>
<li><p>回合式战斗要想受到最小的伤害，一是优先解决部分怪兽，二是尽可能快速解决战斗。所以分为优先解决A还是B两种情况，然后保证回合数最小。先预处理下伤害值 sum[ ] ，因为每天的伤害值是公差为1的等差数列，所以根据lower_bound( HA+HB )确定回合数一定是最优的回合数，不受伤害溢出之类情况的影响，然后具体分析。</p>
<a id="more"></a>
</li>
<li><p>1.先解决A，lower(HA)获得解决A的回合数，并做差得到解决A时的溢出伤害 $dis$。判断剩下的回合数是否可以解决掉B。如果可以，直接根据回合数输出序列，否则假设某一回合的伤害等于溢出的伤害，就可以把该伤害分给B，两只怪兽都可以解决。</p>
<blockquote>
<p>只把溢出的伤害全部分给B，所以需要单独的一个回合</p>
</blockquote>
</li>
<li><p>2.先解决B，lower(HB)获得解决B的回合数，并做差得到解决B时的溢出伤害 $dis$。根据upper(dis) - 1可以得到保证能解决B的同时能去掉的最长前缀，由这个前缀产生的伤害可以转移给A（注意：该伤害 $\leq$ 解决B的溢出伤害）。判断该伤害以及解决B之后的后续伤害能否解决A，如果可以则前缀为攻击A，然后攻击B，最后攻击A。否则做差得到处理怪兽A还需要的伤害 $tis$, 在处理B时，假如 $tis\geq2i+1 || tis==i$，可以当前回合攻击B。</p>
<blockquote>
<p>如果想让字典序尽可能小，则先考虑A放在最前的情况是否成立，此时补偿给A的伤害 $\leq$ 处理B溢出伤害。如果不成立，就根据A需要的伤害，尽可能往前面插。</p>
<blockquote>
<p>注意不能影响处理B，所以取最长前缀的时候 用的是 upper - 1</p>
</blockquote>
</blockquote>
</li>
<li><p>两种情况的伤害值容易得出，然后根据伤害值和字典序比较就好了。（讲乱了）</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200020</span>;</span><br><span class="line"><span class="keyword">int</span> sum[N];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sum[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">100020</span>;i++)&#123;</span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> HA,HB,KA,KB;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;HA&gt;&gt;HB&gt;&gt;KA&gt;&gt;KB;</span><br><span class="line">        <span class="built_in">string</span> ans1,ans2;</span><br><span class="line">        <span class="comment">//A</span></span><br><span class="line">        <span class="keyword">int</span> t1=lower_bound(sum+<span class="number">1</span>,sum+<span class="number">100000</span>,HA)-sum;</span><br><span class="line">        <span class="keyword">int</span> t2=lower_bound(sum+<span class="number">1</span>,sum+<span class="number">100000</span>,HA+HB)-sum;</span><br><span class="line">        <span class="keyword">int</span> sum1=t1*KA+t2*KB;</span><br><span class="line">        <span class="keyword">if</span>(sum[t2]-sum[t1]&gt;=HB)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t1;i++)    ans1+=<span class="string">'A'</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=t1+<span class="number">1</span>;i&lt;=t2;i++) ans1+=<span class="string">'B'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> dis=sum[t1]-HA;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t1;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=dis) ans1+=<span class="string">'A'</span>;</span><br><span class="line">                <span class="keyword">else</span> ans1+=<span class="string">'B'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=t1+<span class="number">1</span>;i&lt;=t2;i++) ans1+=<span class="string">'B'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//B</span></span><br><span class="line">        <span class="keyword">int</span> t3=lower_bound(sum+<span class="number">1</span>,sum+<span class="number">100000</span>,HB)-sum;</span><br><span class="line">        <span class="keyword">int</span> sum2=KB*t3+KA*t2;</span><br><span class="line">        <span class="keyword">int</span> di=sum[t3]-HB;</span><br><span class="line">        <span class="keyword">int</span> t4=upper_bound(sum+<span class="number">1</span>,sum+<span class="number">100000</span>,di)-sum<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(sum[t4]+sum[t2]-sum[t3]&gt;=HA)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t4;i++)    ans2+=<span class="string">'A'</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=t4+<span class="number">1</span>;i&lt;=t3;i++) ans2+=<span class="string">'B'</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=t3+<span class="number">1</span>;i&lt;=t2;i++) ans2+=<span class="string">'A'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> dd = HA-(sum[t2]-sum[t3]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t3;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(dd&gt;=<span class="number">2</span>*i+<span class="number">1</span>||dd==i)&#123;</span><br><span class="line">                    dd-=i,ans2+=<span class="string">'A'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> ans2+=<span class="string">'B'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=t3+<span class="number">1</span>;i&lt;=t2;i++)&#123;</span><br><span class="line">                ans2+=<span class="string">'A'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum1&lt;sum2) <span class="built_in">cout</span>&lt;&lt;sum1&lt;&lt;<span class="string">" "</span>&lt;&lt;ans1&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sum1&gt;sum2) <span class="built_in">cout</span>&lt;&lt;sum2&lt;&lt;<span class="string">" "</span>&lt;&lt;ans2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(ans1&lt;ans2) <span class="built_in">cout</span>&lt;&lt;sum1&lt;&lt;<span class="string">" "</span>&lt;&lt;ans1&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;sum2&lt;&lt;<span class="string">" "</span>&lt;&lt;ans2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





</li>
</ul>
<h3 id="2-美团杯"><a href="#2-美团杯" class="headerlink" title="2.美团杯"></a>2.美团杯</h3><p>美团杯没有打，赛后试着做了一下，让我打的话估计只能拿small了。</p>
<ul>
<li><p>A题之前好像见过类似的，不过自己处理的还是有点问题，看了锋gg写的，dp这块还得多做下题。</p>
</li>
<li><p>图片解密，看完small，excel设置下条件格式就出来了，large就无力了，想起来CF愚人节场那个判断里外的，python好香啊。</p>
</li>
<li><p>魔塔真的好好玩，想起来小时候跟我哥对着电脑各种搞，是男人就***，是童年的感觉了，不过这道题还是离100层遥遥无期啊，small倒是挺简单的。</p>
</li>
<li><p>交互题只能过small，记得之前CF有道交互题，你每次选一个序列，能获得目标值在这个序列中的排名，经过*次问你是否能得到原序列还是目标值总排名。所以这道题每次选两个，确定一下排名关系。前些天好像有个学弟问C语言的题，也用到了这个思路。看了别人写的题解，stable_sort学到了，归并排序我之前也只会求个逆序对。</p>
</li>
</ul>
<h3 id="3-CF"><a href="#3-CF" class="headerlink" title="3.CF"></a>3.CF</h3><p>这几场CF暴露出来的问题挺大的，树状数组用的不熟，二分三分做的也不好，多理解多练习一下吧。还有之前看到CF图论板块挺好的，平时做做记录一下。</p>
<blockquote>
<p>什么时候才能跟锋gg一样上紫啊</p>
</blockquote>
<h3 id="4-期末考试"><a href="#4-期末考试" class="headerlink" title="4.期末考试"></a>4.期末考试</h3><p>还有六门课，概率论和计组好像学的都不怎么好，得好好学一下了。</p>
<h3 id="5-杂谈"><a href="#5-杂谈" class="headerlink" title="5.杂谈"></a>5.杂谈</h3><p>修改博客文档时发现渲染失败，后来知道 .yml 文件，以及设置的post模板中出现的冒号后均要加空格。</p>
<p>多组数据一定要考虑memset的问题</p>
<p>添加音乐播放器，但播放异常的问题还没有解决</p>
<p>gitalk感觉不太好用，改用valine,邮件自动提醒正在配</p>
]]></content>
      <categories>
        <category>题解</category>
      </categories>
  </entry>
  <entry>
    <title>H.pair数位DP</title>
    <url>/2020/05/22/H-pair%E6%95%B0%E4%BD%8DDP/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="H-pair-数位DP"><a href="#H-pair-数位DP" class="headerlink" title="H.pair 数位DP"></a>H.pair 数位DP</h3><ul>
<li><p>题意：给定三个整数A,B,C，求数对个数$(1\leq x\leq A,1\leq y\leq B)$,至少满足以下一个条件：</p>
<p>$(x $ $and$ $y)&gt;C$</p>
<p>$(x $ $xor$ $y)&lt;C$</p>
<p>想了好久，转成二进制按位计数，会不会是数位DP，跟杰哥锋哥哥说了下，应该是，然后就去百度学习数位DP了，拉出来不要62的AC代码开始魔改。三维变五维又变七维，最后在锋哥哥的帮助下终于过了。</p>
<p>从高位到低位数位DP，其考虑的范围是$(0\leq x\leq A,0\leq y\leq B)$，跟题目要求不同，要注意这里产生的非法情况，大概两种做法吧：</p>
<a id="more"></a>

<p>1.开五维  $dp[pos][pre1][pre2][lim1][lim2]$ ，pre1表示此前与运算与C的比较关系，lim1表示与运算的临界关系，求出总数 $ans$ , 然后减去 $(min(A,C-1)+min(B,C-1)+1)$，0导致的非法情况只在 $xor$ 中出现，所以保证 $\leq c-1$ 。</p>
<p>2.开七维  $dp[pos][pre1][pre2][lim1][lim2][vis1][vis2]$ ,在五维的基础上增加了 vis 表示该运算中是否添加过非零值，最后只需要统计vis==1的答案。</p>
<p><del>赛时开了七维过的</del>：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll a[<span class="number">40</span>],b[<span class="number">40</span>],c[<span class="number">40</span>];</span><br><span class="line">ll A,B,C;</span><br><span class="line">ll dp[<span class="number">40</span>][<span class="number">5</span>][<span class="number">5</span>][<span class="number">5</span>][<span class="number">5</span>][<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(ll pos, ll pre1 ,ll pre2 , ll lim1 ,ll lim2, ll vis1, ll vis2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(pos == <span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vis1&amp;&amp;vis2&amp;&amp;(pre1==<span class="number">1</span>||pre2==<span class="number">1</span>) ) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dp[pos][pre1][pre2][lim1][lim2][vis1][vis2] != <span class="number">-1</span>) <span class="keyword">return</span> dp[pos][pre1][pre2][lim1][lim2][vis1][vis2];</span><br><span class="line">    ll up1 = lim1 ? a[pos] : <span class="number">1</span>;</span><br><span class="line">    ll up2 = lim2 ? b[pos] : <span class="number">1</span>;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=up1;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=up2;j++)&#123;</span><br><span class="line">            ll dis1=i&amp;j,dis2=i^j;</span><br><span class="line">            ll m1=pre1,m2=pre2;</span><br><span class="line">            <span class="keyword">if</span>(m1==<span class="number">0</span>)&#123; <span class="comment">// &amp;   之等于时判断</span></span><br><span class="line">                <span class="keyword">if</span>(dis1&gt;c[pos]) m1=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(dis1&lt;c[pos])m1=<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(m2==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(dis2&lt;c[pos]) m2=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(dis2&gt;c[pos]) m2=<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans+=dfs(pos<span class="number">-1</span>,m1,m2,lim1&amp;&amp;i==up1,lim2&amp;&amp;j==up2, vis1||i,vis2||j );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[pos][pre1][pre2][lim1][lim2][vis1][vis2] = ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">-1</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">        <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">        <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;A&gt;&gt;B&gt;&gt;C;</span><br><span class="line">        ll tmp=A;</span><br><span class="line">        <span class="keyword">int</span> mx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(tmp)&#123;</span><br><span class="line">            a[cnt++]=tmp%<span class="number">2</span>;</span><br><span class="line">            tmp&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mx=<span class="built_in">max</span>(mx,cnt);</span><br><span class="line">        tmp=B;</span><br><span class="line">        cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(tmp)&#123;</span><br><span class="line">            b[cnt++]=tmp%<span class="number">2</span>;</span><br><span class="line">            tmp&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        &#125;mx=<span class="built_in">max</span>(mx,cnt);</span><br><span class="line">        tmp=C;</span><br><span class="line">        cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(tmp)&#123;</span><br><span class="line">            c[cnt++]=tmp%<span class="number">2</span>;</span><br><span class="line">            tmp&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mx=<span class="built_in">max</span>(mx,cnt);</span><br><span class="line">        ll ans=dfs(mx,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//初始化比较关系为0</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>今天总体还算可以，C题我溜去上课耽误了一点时间，等会补下线段树的做法。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title>随便说说</title>
    <url>/2020/05/27/%E9%9A%8F%E4%BE%BF%E8%AF%B4%E8%AF%B4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>UPD 5-31: 昨晚梦到在禁区前，用很难想到的熟练度勾回了球并借势踢了一脚，但还是绵软无力。其实可以跟上再补射的，但梦里我静止看着球的轨迹，它好歹是进了。球踢出去，其实还是自己的，有跟上的可能，你总是要跟的。前几天说的以下，部分是短暂的想法，这不，几天时间就又改了。好好努力，好好前进，还有又想回绿茵了。</p>
</blockquote>
<p><strong>最近有点崩，好像是全方面的。</strong></p>
<p>春季学期，念着冬季的复习，吐槽着当前的课程，就这样一直拖到了现在。大概想想，就知道自己确确实实浪费了好多时间，做了很多无营养的事，计组一点都不会，离散数据结构靠灵感，概率论靠那么一点底子，英语没达到之前的初衷，炒股课也是水了过去，日本文学名篇也没沉下心看过几本书。</p>
<p>随便说点想法吧。</p>
<a id="more"></a>

<p>我适合读书吗？有时候会这样想，一如我高三时的想法。是不是坚持完这段时间就好了啊，这样说我不想读研了。</p>
<p>但事实是读书的问题吗？平时的事情越来越不操心，越来越没有危机感，偶尔来的紧张也是去散播忧虑，照样如我高三时的所作所为。全凭有时候吊着的一口气，让我不要永远停下来。这样去做，不论做什么都做不好吧？</p>
<p>那该怎么办呢，真的好乱好烦啊，感觉到处都是不满。最近关于线上考试的安排，常常是大家一两个小时讨论，最后一点东西也没得到的结果，常常会因为某些人的发言而烦气，“为什么有这种问题啊？”，这不就是控制下变量，区分对待就好了吗，为什么要每个人要严格按照一个模板来啊，这样问题不是永远解决不了的吗。</p>
<p>或者是有时候会漏掉作业对自己很无语，有时候是做着研讨抄着东西，问我这是在干嘛？很可笑的是大概是一年前的现在我哭着想问一个意义在哪，一年过来了，我似乎给自己找到了一条找意义的路，先做到。以前喜欢士兵突击。发生了很多事情之后用了成才的 “ 我要回去寻找我的枝枝蔓蔓了 ” 当作格言，一年回望，其实我更应该记得 “想要和得到之间还有两个字叫做到 ”，过于纠结目前的和未来的，能有什么结局啊？</p>
<p>在球场上，我也总是畏手畏脚，拿到球后总会乱，我不知道应该怎么处理，初中在小乔的鼓励下进了两个任意球，那好像是我最早相信我喜欢足球的时候。后来刚到一中也是呀，常常跟高年级的人踢球，也可以让B星和季林一脚长传跑到前场单突，一场都可以来上很多次，不知道做什么很乱的时候，就进攻好了啊，我超级享受撕开他们防线然后取得进球的那一刻，我现在还能清清楚楚的记得那些个不容易的进球的轨迹，最后一分钟门前抢断冲刺全场绝杀，还有跟隔壁班踢球打进的小角度，当然也有很多很多无奈的时候，哈哈哈哈门前拿到绝胜球大好空间没有传球，打了小角度带全队失败，还有一次又一次射门错失，那时候的我对于每个球都计较的很，季林常常给我安慰鼓励。刚上大学感觉大家都蛮厉害啊，然后新生杯因为防守问题漏了一个乌龙，永远的自卑起来。但究竟是什么时候，自己在球场上都丢失了勇气呢。</p>
<p>关于研究生，原本理想化的是保研，但因为差了个做到，就无望了。后来想的是考研，但我最近崩的让我怀疑自己，我考研是为了什么呢？是过渡焦虑还是想要去到更高的平台。总在担心自己什么什么不会，其实个人来说，专注更为可贵？好好做完一件事吧。</p>
<p>听着秋田版本的曾经我也想过一了百了，放空自己瞎打出这些话，好像思路稍微理清了一点，不论未来要成为什么人，先做好事情，对吧，别说空话了。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>区间和最大值最小</title>
    <url>/2020/07/09/%E5%8C%BA%E9%97%B4%E5%92%8C%E6%9C%80%E5%A4%A7%E5%80%BC%E6%9C%80%E5%B0%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>序列自动机</title>
    <url>/2020/06/12/%E5%BA%8F%E5%88%97%E8%87%AA%E5%8A%A8%E6%9C%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>补题，学一下序列自动机，看了 <a href="https://blog.csdn.net/weixin_30568715/article/details/96500133?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase" target="_blank" rel="noopener">序列自动机总结与例题</a></p>
<p>说白了就是一个二维数组 $nxt[i][j]$ ，对于字符集 $a$, $|s|=n$ , $nxt[i][j]$表示$i$ 以后第一个字符 $j$ 的位置，0为根节点，建图即 $DAG$ 。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = n ; i &gt;= <span class="number">1</span> ; i ++ )&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j= <span class="number">1</span> ; j &lt;= a ; j ++ )&#123;</span><br><span class="line">        nxt[i<span class="number">-1</span>][j] = nxt[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    nxt[i<span class="number">-1</span>][s[i]] = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以想到的用处：</p>
<p>​        1.判断是否是原字符串的子序列</p>
<p>​        2.求子序列个数</p>
<p>​        3.求两串的公共子序列个数</p>
<p>​        4.求串的回文子序列个数</p>
<p>​        5.求一个$A,B$的最长公共子序列$S$，使得$C$是的子序列</p>
<p>//代码还没搬上来</p>
<a id="more"></a>

<p>先贴一道遇到的题吧</p>
<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6586" target="_blank" rel="noopener">HDU 2019 多校 - String</a></p>
<p>题意：给定字符串 $s$, 找出长度为 $k$ 且字典序最小的子序列，要满足每个字母出现的次数在范围$[Li,Ri]$内，否则输出 -1。</p>
<p>分析：当时想着不太会贪心，暴力点就是遍历k个位置，每个位置优先去放字典序小的，且能使得满足L,R的字符。判断能否放置的时候要考虑到后续的情况。具体考虑就用到了上述的序列自动机的思想（其实就是记录每个字符下个出现的位置），可以预处理二维next数组，也可以开vector存每种字符的出现位置+迭代器，感觉后者更舒服？</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="built_in">string</span> st;</span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">100020</span>][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">char</span> res[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> L[<span class="number">30</span>],R[<span class="number">30</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span> &gt;Q[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;st&gt;&gt;k)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;L[i]&gt;&gt;R[i];</span><br><span class="line">            Q[i].<span class="built_in">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> n = st.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)&#123;</span><br><span class="line">                cnt[i][j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)&#123;  <span class="comment">//后缀</span></span><br><span class="line">                cnt[i][j]=cnt[i+<span class="number">1</span>][j]+(st[i]==(<span class="string">'a'</span>+j));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            Q[st[i]-<span class="string">'a'</span>].push_back(i);<span class="comment">// 位置</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span> &gt;::iterator dis[<span class="number">26</span>];<span class="comment">//头指针</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++) dis[i]=Q[i].<span class="built_in">begin</span>();</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">-1</span>,last=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123; <span class="comment">//遍历k个位置</span></span><br><span class="line">            <span class="keyword">int</span> flag1=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(vis[j]==R[j]) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">while</span>(dis[j]!=Q[j].<span class="built_in">end</span>()&amp;&amp;( (*dis[j])&lt;=last)) </span><br><span class="line">                    dis[j]++; </span><br><span class="line">                <span class="keyword">if</span>(dis[j]==Q[j].<span class="built_in">end</span>()) <span class="keyword">continue</span>;</span><br><span class="line">                vis[j]++;</span><br><span class="line">                <span class="comment">//假设该位放 j ，之后判断不满足情况</span></span><br><span class="line">                <span class="keyword">int</span> pos=*dis[j],sum1=<span class="number">0</span>,sum2=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;<span class="number">26</span>;t++)&#123;                    <span class="comment">//三种情况</span></span><br><span class="line">                    <span class="keyword">if</span>(cnt[pos+<span class="number">1</span>][t]+vis[t]&lt;L[t]) flag=<span class="number">0</span>; <span class="comment">//不能达到L</span></span><br><span class="line">                    sum1+=<span class="built_in">max</span>(L[t]-vis[t],<span class="number">0</span>);             <span class="comment">//距离L的总差距</span></span><br><span class="line">                    sum2+=<span class="built_in">min</span>(cnt[pos+<span class="number">1</span>][t],R[t]-vis[t]); <span class="comment">//剩下合法个数</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(sum1&gt;k-i<span class="number">-1</span>||sum2&lt;k-i<span class="number">-1</span>) flag=<span class="number">0</span>;        <span class="comment">//剩下数量不足</span></span><br><span class="line">                <span class="keyword">if</span>(!flag) vis[j]--;                       <span class="comment">//当前不能使用</span></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    res[i]=<span class="string">'a'</span>+j;</span><br><span class="line">                    flag1=<span class="number">1</span>;</span><br><span class="line">                    last=pos;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!flag1)&#123;                                  <span class="comment">//当前位无法放置</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">                ans=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">-1</span>)&#123;</span><br><span class="line">            res[k]=<span class="string">'\0'</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>XIU-微信小程序</title>
    <url>/2020/06/15/XIU-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="微信小程序比赛提交过作品了，这里简单回顾一下。"><a href="#微信小程序比赛提交过作品了，这里简单回顾一下。" class="headerlink" title="微信小程序比赛提交过作品了，这里简单回顾一下。"></a>微信小程序比赛提交过作品了，这里简单回顾一下。</h3><p>XIU 修小善  校园维修助手</p>
<p>核心基本是订单的增删改查，地址管理，还加了点别的功能</p>
<p>感谢三位队友</p>
<hr>
<p>之前看到微信小程序大赛的广告，想着给mm做一个挺不错，那要不先搞一下这个积累点经验？ </p>
<p>我转发给了外校的高ZK，他又拉了两个学长Y和C，组成了队伍。这个组队的效率真的蛮高的，然后当天的晚上，我们就基本确定了方向以及分工，做一个校内电子产品维修类的小程序，灵感来自于Y学长在校期间曾在电子社团张罗过类似的事。我和C学长负责一下交互还有数据库相关的，高负责页面，Y学长统筹。</p>
<a id="more"></a>

<p>高写页面真的厉害的，两位学长也很强，我也算是学到了点东西吧，不过更多就是调参？感觉没有硬功底，非要说的话，也就是带着写了写页面，去简单学了一下JS，锻炼了下耐心。</p>
<p>眨眼几个月过去了，Y学长搞完毕设就业了，C学长忙完实验室准备考研，高也准备跨考计算机，我呢还挺迷茫的，还是先做好眼下的事。说来这个东西也不难的，一个小东西，但最后还是挺有成就感的，最后几天几个人疯狂调bug，大家都辛苦啦，而且每个人都蛮负责的。</p>
<p>然后就是再修修页面功能，等下一步结果咯。</p>
<h3 id="遇到的问题，记下来"><a href="#遇到的问题，记下来" class="headerlink" title="遇到的问题，记下来"></a>遇到的问题，记下来</h3><h4 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h4><p>记得加decode就好了</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">decode</span>=<span class="string">'true'</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="获取系统时间"><a href="#获取系统时间" class="headerlink" title="获取系统时间"></a>获取系统时间</h4><p>系统自带的 utils.js 其实已经有蛮好的功能了，方便统一按格式获取年月日的话可以自己写个函数。如果选择自己写，一定要记得开放端口。关于页面中调用函数，之前翻了很多博客，搬上去之后都在报错 data undefined，博客下面相关地提问也没有回复，再细看，原来那么多博客都是抄地同一篇啊，怪不得报错都是一模一样的。</p>
<p>然后就索性自己凑个数据格式，不要函数了？</p>
<figure class="highlight qml"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">	<span class="attribute">onLoad</span>: <span class="function"><span class="keyword">function</span>(<span class="params">option</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> timestamp=<span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>())</span><br><span class="line">		<span class="keyword">var</span> <span class="built_in">date</span>=<span class="keyword">new</span> <span class="built_in">Date</span>(timestamp)</span><br><span class="line">		<span class="keyword">var</span> Y=<span class="built_in">date</span>.getFullYear();        <span class="comment">//需要对齐时加个三目运算就好</span></span><br><span class="line">		<span class="keyword">var</span> M=<span class="built_in">date</span>.getMonth()+<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">var</span> D=<span class="built_in">date</span>.getDate(); </span><br><span class="line">		<span class="keyword">var</span> hour=<span class="built_in">date</span>.getHours()</span><br><span class="line">		<span class="keyword">var</span> minute=<span class="built_in">date</span>.getMinutes()</span><br><span class="line">		<span class="keyword">var</span> second=<span class="built_in">date</span>.getSeconds()</span><br><span class="line">		<span class="keyword">this</span>.setData(&#123;</span><br><span class="line">   			<span class="attribute">time</span>: Y+<span class="string">'年'</span>+M+<span class="string">'月'</span>+D+<span class="string">'日 '</span>+hour+<span class="string">':'</span>+minute+<span class="string">':'</span>+second</span><br><span class="line">   		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h4 id="传递数据"><a href="#传递数据" class="headerlink" title="传递数据"></a>传递数据</h4><h5 id="1-页面简单传值"><a href="#1-页面简单传值" class="headerlink" title="1.页面简单传值"></a>1.页面简单传值</h5><p>可以传一个参数或多个参数，不过要传集合的话，要么是拆参数传，要么是转成字符串传，不过转成字符串好像稍微有点麻烦，还不如用其他方式传值。</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">//假设A-&gt;B 传递index</span></span><br><span class="line"><span class="comment">//A页面中</span></span><br><span class="line"><span class="selector-tag">wx</span><span class="selector-class">.navigateTo</span>(&#123; </span><br><span class="line">	<span class="attribute">url</span>: <span class="string">'../B/B?index=index'</span>  <span class="comment">//  '../B/B?index='+index</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//B页面中</span></span><br><span class="line"><span class="attribute">onLoad</span>: function(option)&#123;</span><br><span class="line">	this.setData(&#123;</span><br><span class="line">		<span class="attribute">index</span>: option.index  <span class="comment">//要提前定义 index</span></span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>传多个值也是同样的，在后面 &amp;&amp; 继续加数据就好</p>
<h5 id="2-回退页面传值"><a href="#2-回退页面传值" class="headerlink" title="2.回退页面传值"></a>2.回退页面传值</h5><p>感觉这个好精彩，可以直接对页面栈中上个页面进行操作</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> pages = getCurrentPages();</span><br><span class="line">   <span class="keyword">var</span> currPage = pages[pages.length<span class="number">-1</span>]; <span class="comment">//当前页面</span></span><br><span class="line">   <span class="keyword">var</span> prevPage = pages[pages.length<span class="number">-2</span>]; <span class="comment">//上个页面</span></span><br><span class="line">   prevPage.setData(&#123;</span><br><span class="line">     	<span class="keyword">value</span>: <span class="keyword">this</span>.data.<span class="keyword">value</span>,</span><br><span class="line">   &#125;)</span><br><span class="line">   wx.navigateBack(&#123;</span><br><span class="line">      	delta : <span class="number">1</span>,</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure>

<h5 id="3-本地存储传值"><a href="#3-本地存储传值" class="headerlink" title="3.本地存储传值"></a>3.本地存储传值</h5><p>这个之前写的有点乱了，之后加上去吧。</p>
<h4 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h4><p>尤其在 wx:for 遍历时，之前有的方法还会出错，就统一改成 data-XXX了，这个应该是简单的绑定了吧。</p>
<p>对了，要注意这样绑定是 currentTarget .</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">//wxml:</span></span><br><span class="line">&lt;view data-index=<span class="string">"&#123;&#123;index&#125;&#125;"</span> bindtap=<span class="string">"To"</span> &gt;&lt;/view&gt;</span><br><span class="line"><span class="comment">//js:</span></span><br><span class="line"><span class="function"><span class="title">To</span><span class="params">(e)</span></span>&#123;</span><br><span class="line">	<span class="selector-tag">var</span> In = e<span class="selector-class">.currentTarget</span><span class="selector-class">.dataset</span>.index</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>咕咕咕。。。</p>
]]></content>
      <categories>
        <category>杂</category>
      </categories>
  </entry>
</search>
